It is worthwhile to note that the two indirect implications for AND, namely:

	if all child.args become TRUE
		than parent is implied TRUE

	if parent is assigned FALSE and all but one child
		is assigned true then that child is implied FALSE

actually corresponds to the same CNF clause:

	or(f !x1 !x2 !x3 !x4)

Therefore, we can use an unified watching scheme to handle these two indirect implications


So we need to watch the literals:

    !f x1 x2 x3 x4 to the watched candidate list

    and select two of them as the watched pointers.